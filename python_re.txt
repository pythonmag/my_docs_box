1)
===========
import re

sint = 'It is sintaxise for string1 search'

my_patterns = ['string1', 'string2']

for pattern in my_patterns:
    if re.search(pattern, sint) is not None:
        print(re.search(pattern, sint))
        print(re.search(pattern, sint).start())
        print(re.search(pattern, sint).end())
        print(re.search(pattern, sint).span())
        print('=====')
    else:
        print('Not Search')

-----------
(python3venv) ryndin@ubu:~/my_venvs/python3venv/src$ python3 learning.py 
<_sre.SRE_Match object; span=(20, 27), match='string1'>
20
27
(20, 27)
=====
Not Search



2)
================
import re

split_with = '@'                    ## тут полноценное Рег Выражение может быть

my_email = "mtg2mag@gmail.com"

print(re.split(split_with, my_email))

-----------
(python3venv) ryndin@ubu:~/my_venvs/python3venv/src$ python3 learning.py 
['mtg2mag', 'gmail.com']


3)
============
import re

my_match = 'yurii'
my_match = 'yur[i]{1,3}'            ## тут полноценное Рег Выражение может быть

my_string = 'i am yurii yurii is programmer yurii is man'

print(re.findall(my_match, my_string))
print(len(re.findall(my_match, my_string))))

-----------------
(python3venv) ryndin@ubu:~/my_venvs/python3venv/src$ python3 learning.py 
['yurii', 'yurii', 'yurii']
3



4)
более сложное РегЕксп
https://regex101.com/
===============
import re

my_match = '\w{4}'                              # см.  https://regex101.com/

my_string = 'i am yurii yurii is programmer yurii is man'

print(re.findall(my_match, my_string))

---------------
(python3venv) ryndin@ubu:~/my_venvs/python3venv/src$ python3 learning.py 
['yuri', 'yuri', 'prog', 'ramm', 'yuri']







